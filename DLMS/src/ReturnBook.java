
import java.sql.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Likhith
 */
public class ReturnBook extends javax.swing.JFrame {

    /**
     * Creates new form ReturnBook
     */
    public ReturnBook() {
        initComponents();
         setDefaultCloseOperation(ReturnBook.DISPOSE_ON_CLOSE);
    }
    
    public static String generateDueDate(String issuedDate){
        
        int iyear = Integer.parseInt(issuedDate.substring(0, 4));
        
        int iMonth = Integer.parseInt(issuedDate.substring(5, 7));
        
        int iDays = Integer.parseInt(issuedDate.substring(8));
        
        LocalDate idate = LocalDate.of(iyear, iMonth, iDays);
        
        LocalDate dueDate = idate.plusDays(10);
        return dueDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        checkForDueButton = new javax.swing.JButton();
        usn_t = new javax.swing.JTextField();
        bookId_t = new javax.swing.JTextField();
        fetchDetailsButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookDetailTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        returnBookButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Return Book");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("USN");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Book ID");

        checkForDueButton.setText("Generate total Due");
        checkForDueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkForDueButtonActionPerformed(evt);
            }
        });

        fetchDetailsButton.setText("fetch issued book details");
        fetchDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchDetailsButtonActionPerformed(evt);
            }
        });

        bookDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookID", "Book Name", "Issue Date", "Due Date"
            }
        ));
        jScrollPane2.setViewportView(bookDetailTable);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Issued book details");

        returnBookButton.setText("Return Book");
        returnBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Generate Due for this book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(returnBookButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel4)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(bookId_t, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(usn_t, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(fetchDetailsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(checkForDueButton)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backButton)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usn_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fetchDetailsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bookId_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkForDueButton)
                    .addComponent(jButton1))
                .addGap(13, 13, 13)
                .addComponent(returnBookButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchDetailsButtonActionPerformed
        // TODO add your handling code here:
        String usn = usn_t.getText();
        DbConnection db = new DbConnection();
        DefaultTableModel model = (DefaultTableModel)bookDetailTable.getModel();
        model.setRowCount(0);
        
        String issueBookDetailsQuery = "select * from books_issued where usn ='"+usn+"';";
        int count = 0;
        if(usn.isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter the usn" );
            return;
        }
        try{
            Connection conn = db.getConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery("select * from books inner join books_issued on books.book_id = books_issued.book_id where usn ='"+usn+"';");
            
            while(rs.next()){
                count++;
                String bookId = rs.getString("book_id");
                String issueDate = rs.getString("issue_date");
                String dueDate = generateDueDate(issueDate);
                String bookName = rs.getString("name");
                
                model.addRow( new Object[] {bookId,bookName,issueDate,dueDate});
            }
            if(count == 0)
            {
                JOptionPane.showMessageDialog(this,"No books issued" );
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
        
        
        
    }//GEN-LAST:event_fetchDetailsButtonActionPerformed

    private void checkForDueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkForDueButtonActionPerformed
        // TODO add your handling code here:
        String usn = usn_t.getText();
        String bookIssuedDetailsQuery = "select * from books_issued where usn = '"+usn+"';";
        DbConnection db = new DbConnection();
        int due = 0;
        LocalDate today = LocalDate.now();
        String todayString = today.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        
        try{
            Connection conn = db.getConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(bookIssuedDetailsQuery);
            while(rs.next()){
                String issuedDate = rs.getString("issue_date");
                due += IssueBook.generateDue(issuedDate,todayString);
            }if(due == 0){
                JOptionPane.showMessageDialog(this,"No dues pending");
            }
            else
            JOptionPane.showMessageDialog(this,"Please clear the due: "+due);

        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage() );
        }
    }//GEN-LAST:event_checkForDueButtonActionPerformed

    private void returnBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookButtonActionPerformed
        // TODO add your handling code here:
        String usn = usn_t.getText();
        String bookId = bookId_t.getText();
        String deleteInBooksIssuedQuery = "delete from books_issued where book_id ='"+bookId+"' and usn ='"+usn+"';"; 
        String CopiesIncreaseQuery = "update books set copied = copied + 1 where book_id = '"+bookId+"';";
        DbConnection db = new DbConnection();
        if (usn.isBlank() || bookId.isBlank()){
            JOptionPane.showMessageDialog(this,"Please enter all details");
            return;
        }
        
        try{
            Connection conn = db.getConnection();
            Statement stm = conn.createStatement();
            int n1 = stm.executeUpdate(deleteInBooksIssuedQuery);
            if(n1 == 0){
                JOptionPane.showMessageDialog(this,"No entry found");
            }
            else{
                int n2 = stm.executeUpdate(CopiesIncreaseQuery);
                if (n2 > 0)
                JOptionPane.showMessageDialog(this,"Book return succesfull");
                else{
                    JOptionPane.showMessageDialog(this,"Book not returned");
                }
            }    
            
            
        }catch(Exception e){
            
        }
        
        
    }//GEN-LAST:event_returnBookButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String usn = usn_t.getText();
        String bookId = bookId_t.getText();
        
        LocalDate today = LocalDate.now();
        String todayString = today.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        
        if (usn.isBlank() || bookId.isBlank()){
                    JOptionPane.showMessageDialog(this,"Please enter all the feilds");
                    return;
        }
        DbConnection db = new DbConnection();
        try{
            Connection con = db.getConnection();
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("select * from books_issued where usn = '"+usn+"' and book_id ='"+bookId+"';");
      
            if(rs.next()){
                    String issueDate = rs.getString("issue_date");
                    int due = 0;
                    due = IssueBook.generateDue(issueDate, todayString);
                    JOptionPane.showMessageDialog(this,due);
            }
        }catch(Exception e){
                    JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable bookDetailTable;
    private javax.swing.JTextField bookId_t;
    private javax.swing.JButton checkForDueButton;
    private javax.swing.JButton fetchDetailsButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton returnBookButton;
    private javax.swing.JTextField usn_t;
    // End of variables declaration//GEN-END:variables
}
