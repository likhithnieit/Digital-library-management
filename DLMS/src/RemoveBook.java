/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Likhith
 */

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class RemoveBook extends javax.swing.JFrame {

    /**
     * Creates new form RemoveBook
     */
    public RemoveBook() {
        initComponents();
        setDefaultCloseOperation(RemoveBook.DISPOSE_ON_CLOSE);
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bookIdToDelete_t = new javax.swing.JTextField();
        fetchBookButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchBookTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        bookNameSearch_t1 = new javax.swing.JTextField();
        deleteAllCopiesButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        numberOfCopies_t = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REMOVE BOOK");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Enter Book Id");

        fetchBookButton.setText("Fetch Book Details");
        fetchBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchBookButtonActionPerformed(evt);
            }
        });

        searchBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookID", "Category", "Book Name", "Author", "Copies"
            }
        ));
        jScrollPane1.setViewportView(searchBookTable);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Enter Book Name/Category");

        deleteAllCopiesButton.setText("Delete all copies");
        deleteAllCopiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllCopiesButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Enter Number of copies");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fetchBookButton)
                                    .addComponent(bookNameSearch_t1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(bookIdToDelete_t, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(deleteButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(numberOfCopies_t, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(deleteAllCopiesButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bookNameSearch_t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(fetchBookButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bookIdToDelete_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numberOfCopies_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteAllCopiesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(deleteButton))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchBookButtonActionPerformed
        // TODO add your handling code here:
        String bookName = bookNameSearch_t1.getText();
        String query = "select * from books where name like  '%"+bookName+"%' or category like '%"+bookName+"%' or book_id like '%"+bookName+"%';";
        DefaultTableModel model = (DefaultTableModel)searchBookTable.getModel();
        DbConnection db = new DbConnection();
        model.setRowCount(0);
        int count = 0;
        try{
           Connection con = db.getConnection();
           Statement stm = con.createStatement();
           ResultSet rs = stm.executeQuery(query);
         
           while(rs.next()){
               count++;
                String bookId = rs.getString("book_id");
                String category = rs.getString("category");
                String name = rs.getString("name");
                String author = rs.getString("author");
                int copies = rs.getInt("copied");
                
                model.addRow( new Object[] {bookId,category,name,author,copies});
           }
           if(count == 0)
               JOptionPane.showMessageDialog(this, "No books available");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_fetchBookButtonActionPerformed

    private void deleteAllCopiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllCopiesButtonActionPerformed
        // TODO add your handling code here:
        
        String bookIdToDelete = bookIdToDelete_t.getText();
        DbConnection db = new DbConnection();
        String query = "delete from books where book_ID = '"+bookIdToDelete+"';";
        Connection con = null;
        try{
            con = db.getConnection();
            Statement stm = con.createStatement();
            int n = stm.executeUpdate(query);
            if(n > 0)
                JOptionPane.showMessageDialog(this,"Book removed successfully"); 
            else
                JOptionPane.showMessageDialog(this, "Book not present"); 
            
            stm.close();
            
            bookIdToDelete_t.setText(null);
            numberOfCopies_t.setText(null);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage()); 
        }
        
    }//GEN-LAST:event_deleteAllCopiesButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        bookIdToDelete_t.setText(null);
        numberOfCopies_t.setText(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String bookIdToDelete = bookIdToDelete_t.getText();
        int numberOfCopiesToDelete = Integer.parseInt(numberOfCopies_t.getText());
        
        String fetchCopiesQuery = "select copied from books where book_id = '"+bookIdToDelete+"';";
        String deleteWholeQuery = "delete from books where book_ID = '"+bookIdToDelete+"';";
        String reduceCopiesQuery = "update books set copied = copied - "+numberOfCopiesToDelete+" where book_id = '"+bookIdToDelete+"';";
        
        DbConnection db = new DbConnection();
        try{
            Connection con = db.getConnection();
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(fetchCopiesQuery);
            
            if(rs.next()){
                int numberOfCopiesPresent = rs.getInt("copied");
                if(numberOfCopiesToDelete > numberOfCopiesPresent ){
                     int n = stm.executeUpdate(deleteWholeQuery);
                     
                    if(n > 0)
                        JOptionPane.showMessageDialog(this,"All the copies of the book is removed"); 
                    else
                        JOptionPane.showMessageDialog(this, "Book not present");
                }else{
                    int n = stm.executeUpdate(reduceCopiesQuery);
                     if(n > 0)
                        JOptionPane.showMessageDialog(this,numberOfCopiesToDelete+" Number of copies deleted"); 
                    else
                        JOptionPane.showMessageDialog(this, "Book not present");
                }
            }else{
             JOptionPane.showMessageDialog(this,"Please Enter correct book Id"); 
            }
            
          stm.close();
          
         bookIdToDelete_t.setText(null);
         numberOfCopies_t.setText(null);
            
        }catch(Exception e){
             JOptionPane.showMessageDialog(this, e.getMessage()); 
        }
        
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bookIdToDelete_t;
    private javax.swing.JTextField bookNameSearch_t1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteAllCopiesButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton fetchBookButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberOfCopies_t;
    private javax.swing.JTable searchBookTable;
    // End of variables declaration//GEN-END:variables
}
